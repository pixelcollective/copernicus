{"remainingRequest":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/source-map-loader/index.js!/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/md/creating-blocks.mdx","dependencies":[{"path":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/md/creating-blocks.mdx","mtime":1561238689673},{"path":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/cache-loader/dist/cjs.js","mtime":1561229345214},{"path":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559585071110},{"path":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/@mdx-js/loader/index.js","mtime":1561229345363},{"path":"/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/node_modules/source-map-loader/index.js","mtime":1561229345898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMva2VsbHltZWFycy9jb2RlL3NpdGVzL2ZsZWVrLmRldi9zaXRlL3dlYi9hcHAvcGx1Z2lucy9jb3Blcm5pY3VzL2RvY3Mvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMva2VsbHltZWFycy9jb2RlL3NpdGVzL2ZsZWVrLmRldi9zaXRlL3dlYi9hcHAvcGx1Z2lucy9jb3Blcm5pY3VzL2RvY3MvbWQvY3JlYXRpbmctYmxvY2tzLm1keCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiBAanN4IG1keCAqLwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgeyBtZHggfSBmcm9tICdAbWR4LWpzL3JlYWN0JzsKLyogQGpzeCBtZHggKi8KCnZhciBtYWtlU2hvcnRjb2RlID0gZnVuY3Rpb24gbWFrZVNob3J0Y29kZShuYW1lKSB7CiAgcmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpIHsKICAgIGNvbnNvbGUud2FybigiQ29tcG9uZW50ICIgKyBuYW1lICsgIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7CiAgICByZXR1cm4gbWR4KCJkaXYiLCBPYmplY3QuYXNzaWduKHt9LCBwcm9wcywgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogOQogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pKTsKICB9Owp9OwoKdmFyIGxheW91dFByb3BzID0ge307CnZhciBNRFhMYXlvdXQgPSAid3JhcHBlciI7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZikgewogIHZhciBjb21wb25lbnRzID0gX3JlZi5jb21wb25lbnRzLAogICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNvbXBvbmVudHMiXSk7CgogIHJldHVybiBtZHgoTURYTGF5b3V0LCBPYmplY3QuYXNzaWduKHt9LCBsYXlvdXRQcm9wcywgcHJvcHMsIHsKICAgIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsCiAgICBtZHhUeXBlOiAiTURYTGF5b3V0IiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDIwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksIG1keCgiaDEiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJjcmVhdGluZy1ibG9ja3MiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkNyZWF0aW5nIEJsb2NrcyIpLCBtZHgoImgyIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAic3BlYyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiU3BlYyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJCbG9ja3MsIGF0IGEgbWluaW11bSwgZmVhdHVyZToiKSwgbWR4KCJoMyIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogImFuLWVkaXRvcmpzLWZpbGUiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgIkFuICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJoMyIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJlZGl0b3IuanMiKSwgIiBmaWxlIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlRoaXMgZmlsZSBzaG91bGQgY29udGFpbjoiKSwgbWR4KCJ1bCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJUaGUgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogImxpIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInJlZ2lzdGVyQmxvY2tUeXBlIiksICIgY2FsbCIpLCBtZHgoImxpIiwgewogICAgcGFyZW50TmFtZTogInVsIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDM0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFuICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJlZGl0IiksICIgZnVuY3Rpb24iKSwgbWR4KCJsaSIsIHsKICAgIHBhcmVudE5hbWU6ICJ1bCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJBICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJsaSIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJzYXZlIiksICIgZnVuY3Rpb24uIikpLCBtZHgoImgzIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAiYS1sYXJhdmVsLWJsYWRlLXZpZXctZm9yLXRoZS1mcm9udGVuZCIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzNwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiQSBMYXJhdmVsIEJsYWRlIHZpZXcgZm9yIHRoZSBmcm9udGVuZCIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJZb3VyIGJsYWRlIHZpZXcgYXV0b21hdGljYWxseSBoYXMgYWNjZXNzIHRvICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIiRhdHRyIiksICIgYW5kICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDQwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIiRjb250ZW50IiksICIsIHdoaWNoIGNvcnJlc3BvbmQgd2l0aCB0aGUgYXR0cmlidXRlcyBhbmQgaW5uZXIgY29udGVudCBtYXJrdXAgb2YgdGhlIGJsb2NrIGFzIGRlZmluZWQgaW4geW91ciAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJlZGl0b3IuanMiKSwgIiBmaWxlLiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJUaGUgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAic2F2ZSIpLCAiIGZ1bmN0aW9uIGlzIGxhcmdlbHkgaW5jb25zZXF1ZW50aWFsIHRvIENvcGVybmljdXMsIGFzIHRoZSBlbnRpcmUgU2F2ZSBtZXRob2QgaXMgcmVwbGFjZWQgYmVoaW5kLXRoZS1zY2VuZXMgd2l0aCBhIGNhbGxiYWNrIHRvIHJlbmRlciBhIEJsYWRlIHRlbXBsYXRlIGZpbGUgaW4gaXRzIHN0ZWFkLiBUaGUgZXhjZXB0aW9uIGlzIGZvciBibG9ja3Mgd2hpY2ggY29udGFpbiBvdGhlciBibG9ja3MgKG5lc3RlZCBibG9ja3MpLiBGb3IgdGhlc2UgeW91IGNhbiBzaW1wbHkgcGFzcyB0aGUgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiaW5uZXJDb250ZW50IiksICIgdG8gc2F2ZSBhbmQgcmV0cmlldmUgaXQgaW4geW91ciB2aWV3IHdpdGggIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiJGNvbnRlbnQiKSwgIi4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiRm9yIGV4YW1wbGU6IiksIG1keCgicHJlIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImNvZGUiLCBPYmplY3QuYXNzaWduKHsKICAgIHBhcmVudE5hbWU6ICJwcmUiCiAgfSwgewogICAgImNsYXNzTmFtZSI6ICJsYW5ndWFnZS1qcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiLy8gLi4uXG5zYXZlOiAoKSA9PiA8SW5uZXJCbG9ja3MuQ29udGVudCAvPixcbi8vIC4uLlxuIikpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA0OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJTdGVwcyB0byBjb25zdHJ1Y3QgYSBuZXcgYmxvY2s6IiksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICIxLWFkZC10aGUtYmxvY2stdG8tdGhlLXJlZ2lzdHJ5IgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDUwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIxLiBBZGQgdGhlIGJsb2NrIHRvIHRoZSByZWdpc3RyeSIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJUaGUgcmVnaXN0cnkgaXMga2VwdCBhdCAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICIvYmxvY2tzLmpzb24iKSwgIi4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiSXRzIGNvbnRlbnRzIGFyZSBwYXJzZWQgYnkgYm90aCB0aGUgQWNvcm4gZnJhbWV3b3JrIGFuZCBMYXJhdmVsIE1peCBzbyBhcyB0byByZWR1Y2UgdGhlIGJ1cmRlbiBvbiB5b3UuIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlRoaXMgZmlsZSBpcyBhIHNpbXBsZSBhcnJheS4gQWRkIHlvdXIgYmxvY2sncyBuYW1lIChleGNsdWRpbmcgbmFtZXNwYWNpbmcpIHRvIHRoaXMgZmlsZS4gWW91IGNhbiBnbGVlZnVsbHkgdGhpbmsgb2YgdGhpcyBhcyBcImNvbmZpZ3VyaW5nIFdlYnBhY2tcIiwgaWYgeW91IHdpc2guIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIkFueXRoaW5nIGFkZGVkIHRvICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIi9ibG9ja3MuanNvbiIpLCAiIHdpbGwgYmUgYXV0b21hdGljYWxseSByZWdpc3RlcmVkIHdpdGggYm90aCB3ZWJwYWNrIGFuZCBXb3JkUHJlc3MgYXMgbG9uZyBhcyB0aGVyZSBhcmVcbmNvcnJlc3BvbmRpbmcgc2NyaXB0cyBhbmQgdmlld3MgaW4gdGhlICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIi9yZXNvdXJjZXMiKSwgIiBkaXJlY3RvcnkuIiksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICIzLWFkZC1zY3JpcHRzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICIzLiBBZGQgc2NyaXB0cyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJKYXZhU2NyaXB0IGZpbGVzIGFyZSBleHBlY3RlZCB0byBiZSBmb3VuZCBhdCAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICIvcmVzb3VyY2VzL2Fzc2V0cy9zY3JpcHRzL3tuYW1lc3BhY2V9L3tibG9ja30iKSwgIi4iKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiQ29wZXJuaWN1cyB3aWxsIHdhdGNoIGZvciB0aGUgZm9sbG93aW5nIGZpbGVzIGluIHRoaXMgZGlyZWN0b3J5OiIpLCBtZHgoImgzIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAiZWRpdG9yanMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjMKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgImVkaXRvci5qcyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2NgogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDY2CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImVkaXRvci5qcyIpLCAiIGlzIHRoZSBtYWluIGVudHJ5cG9pbnQgYW5kIHNob3VsZCBjb250YWluIHlvdXIgYmxvY2sgZGVmaW50aW9uLiBUaGlzIGlzIHRoZSBvbmx5IHJlcXVpcmVkIGFzc2V0LiIpLCBtZHgoImgzIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicHVibGljanMiCiAgfSwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNjcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgInB1YmxpYy5qcyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3MAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInB1YmxpYy5qcyIpLCAiIHdpbGwgYmUgZW5xdWV1ZWQgb25seSBvbiBwYWdlcyB3aGljaCBmZWF0dXJlIHRoZSBibG9jay4gSXQgaXMgc3RyaWN0bHkgb3B0aW9uYWwuIiksIG1keCgiaDMiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJyZWFjdGpzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDcxCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJyZWFjdC5qcyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDc0CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInJlYWN0LmpzIiksICJ3b3JrcyBsaWtlIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNzQKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAicHVibGljLmpzIiksICIgYnV0IHN1cHBvcnRzIEpTWCBhbmQgYXV0b21hdGljYWxseSBlbnF1ZXVlcyAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJ3cC1lbGVtZW50IiksICIgKFdvcmRQcmVzcycgUmVhY3Qgd3JhcHBlcikgYXMgYSBkZXBlbmRlbmN5LiBJdCBpcyBzdHJpY3RseSBvcHRpb25hbC4iKSwgbWR4KCJoMiIsIE9iamVjdC5hc3NpZ24oewogICAgImlkIjogIjQtYWRkLXN0eWxlcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAiNC4gQWRkIFN0eWxlcyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb21wYXNzIGZpbGVzIGFyZSBleHBlY3RlZCB0byBiZSBmb3VuZCBhdCAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3OAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICIvcmVzb3VyY2VzL2Fzc2V0cy9zdHlsZXMve25hbWVzcGFjZX0ve2Jsb2NrfSIpLCAiLiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA3OQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJDb3Blcm5pY3VzIHdpbGwgd2F0Y2ggZm9yIHRoZSBmb2xsb3dpbmcgZmlsZXMgaW4gdGhpcyBkaXJlY3Rvcnk6IiksIG1keCgiaDMiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJlZGl0b3JzY3NzIgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDgwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJlZGl0b3Iuc2NzcyIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4MwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDgzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImVkaXRvci5zY3NzIiksICIgaXMgZm9yIGVkaXRvciBzdHlsZXMuIEl0IGlzIHN0cmljdGx5IG9wdGlvbmFsLiIpLCBtZHgoImgzIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiaWQiOiAicHVibGljc2NzcyIKICB9LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCAicHVibGljLnNjc3MiKSwgbWR4KCJwIiwgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogODcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJwdWJsaWMuc2NzcyIpLCAiLCBsaWtlICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDg3CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgInB1YmxpYy5qcyIpLCAiIGFuZCAiLCBtZHgoImlubGluZUNvZGUiLCB7CiAgICBwYXJlbnROYW1lOiAicCIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA4NwogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJyZWFjdC5qcyIpLCAiIHdpbGwgYmUgZW5xdWV1ZWQgb25seSBvbiBwYWdlcyB3aGljaCBmZWF0dXJlIHRoZSBibG9jay4gSXQgaXMgc3RyaWN0bHkgb3B0aW9uYWwuIiksIG1keCgiaDIiLCBPYmplY3QuYXNzaWduKHsKICAgICJpZCI6ICJhZGQtYS12aWV3IgogIH0sIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDg4CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSksICJBZGQgYSB2aWV3LiIpLCBtZHgoInAiLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA5MQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sICJZb3VyIEJsYWRlIHZpZXcgaXMgYW50aWNpcGF0ZWQgYXQgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTEKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiL3Jlc291cmNlcy92aWV3cy9ibG9ja3Mve25hbWVzcGFjZX0ve2Jsb2NrbmFtZX0uYmxhZGUucGhwIiksICIuIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDkyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIllvdXIgYmxhZGUgdmlldyBhdXRvbWF0aWNhbGx5IGhhcyBhY2Nlc3MgdG8gIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiJGF0dHIiKSwgIiBhbmQgIiwgbWR4KCJpbmxpbmVDb2RlIiwgewogICAgcGFyZW50TmFtZTogInAiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogOTIKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCAiJGNvbnRlbnQiKSwgIiwgd2hpY2ggY29ycmVzcG9uZCB3aXRoIHRoZSBhdHRyaWJ1dGVzIGFuZCBpbm5lciBjb250ZW50IG1hcmt1cCBvZiB0aGUgYmxvY2sgYXMgZGVmaW5lZCBpbiB5b3VyICIsIG1keCgiaW5saW5lQ29kZSIsIHsKICAgIHBhcmVudE5hbWU6ICJwIiwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDkyCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgImVkaXRvci5qcyIpLCAiIGZpbGUuIiksIG1keCgicCIsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDkzCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgIlRoaXMgdmlldyBjYW4gYmUgZXh0ZW5kZWQgdXNpbmcgY29tcG9uZW50cywgbGF5b3V0cywgdmlldyBjb21wb3NlcnMsIGV0Yy4iKSk7Cn0KCmlmICh0eXBlb2YgTURYQ29udGVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgTURYQ29udGVudCAmJiBNRFhDb250ZW50ID09PSBPYmplY3QoTURYQ29udGVudCkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShNRFhDb250ZW50KSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNRFhDb250ZW50LCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiTURYQ29udGVudCIsCiAgICAgIGZpbGVuYW1lOiAibWQvY3JlYXRpbmctYmxvY2tzLm1keCIKICAgIH0KICB9KTsKfQoKTURYQ29udGVudC5pc01EWENvbXBvbmVudCA9IHRydWU7CjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIobWFrZVNob3J0Y29kZSwgIm1ha2VTaG9ydGNvZGUiLCAiL1VzZXJzL2tlbGx5bWVhcnMvY29kZS9zaXRlcy9mbGVlay5kZXYvc2l0ZS93ZWIvYXBwL3BsdWdpbnMvY29wZXJuaWN1cy9kb2NzL21kL2NyZWF0aW5nLWJsb2Nrcy5tZHgiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihsYXlvdXRQcm9wcywgImxheW91dFByb3BzIiwgIi9Vc2Vycy9rZWxseW1lYXJzL2NvZGUvc2l0ZXMvZmxlZWsuZGV2L3NpdGUvd2ViL2FwcC9wbHVnaW5zL2NvcGVybmljdXMvZG9jcy9tZC9jcmVhdGluZy1ibG9ja3MubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYTGF5b3V0LCAiTURYTGF5b3V0IiwgIi9Vc2Vycy9rZWxseW1lYXJzL2NvZGUvc2l0ZXMvZmxlZWsuZGV2L3NpdGUvd2ViL2FwcC9wbHVnaW5zL2NvcGVybmljdXMvZG9jcy9tZC9jcmVhdGluZy1ibG9ja3MubWR4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoTURYQ29udGVudCwgIk1EWENvbnRlbnQiLCAiL1VzZXJzL2tlbGx5bWVhcnMvY29kZS9zaXRlcy9mbGVlay5kZXYvc2l0ZS93ZWIvYXBwL3BsdWdpbnMvY29wZXJuaWN1cy9kb2NzL21kL2NyZWF0aW5nLWJsb2Nrcy5tZHgiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/Users/kellymears/code/sites/fleek.dev/site/web/app/plugins/copernicus/docs/md/creating-blocks.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"creating-blocks\"\n    }}>{`Creating Blocks`}</h1>\n    <h2 {...{\n      \"id\": \"spec\"\n    }}>{`Spec`}</h2>\n    <p>{`Blocks, at a minimum, feature:`}</p>\n    <h3 {...{\n      \"id\": \"an-editorjs-file\"\n    }}>{`An `}<inlineCode parentName=\"h3\">{`editor.js`}</inlineCode>{` file`}</h3>\n    <p>{`This file should contain:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`registerBlockType`}</inlineCode>{` call`}</li>\n      <li parentName=\"ul\">{`An `}<inlineCode parentName=\"li\">{`edit`}</inlineCode>{` function`}</li>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`save`}</inlineCode>{` function.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"a-laravel-blade-view-for-the-frontend\"\n    }}>{`A Laravel Blade view for the frontend`}</h3>\n    <p>{`Your blade view automatically has access to `}<inlineCode parentName=\"p\">{`$attr`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`$content`}</inlineCode>{`, which correspond with the attributes and inner content markup of the block as defined in your `}<inlineCode parentName=\"p\">{`editor.js`}</inlineCode>{` file.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`save`}</inlineCode>{` function is largely inconsequential to Copernicus, as the entire Save method is replaced behind-the-scenes with a callback to render a Blade template file in its stead. The exception is for blocks which contain other blocks (nested blocks). For these you can simply pass the `}<inlineCode parentName=\"p\">{`innerContent`}</inlineCode>{` to save and retrieve it in your view with `}<inlineCode parentName=\"p\">{`$content`}</inlineCode>{`.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// ...\nsave: () => <InnerBlocks.Content />,\n// ...\n`}</code></pre>\n    <p>{`Steps to construct a new block:`}</p>\n    <h2 {...{\n      \"id\": \"1-add-the-block-to-the-registry\"\n    }}>{`1. Add the block to the registry`}</h2>\n    <p>{`The registry is kept at `}<inlineCode parentName=\"p\">{`/blocks.json`}</inlineCode>{`.`}</p>\n    <p>{`Its contents are parsed by both the Acorn framework and Laravel Mix so as to reduce the burden on you.`}</p>\n    <p>{`This file is a simple array. Add your block's name (excluding namespacing) to this file. You can gleefully think of this as \"configuring Webpack\", if you wish.`}</p>\n    <p>{`Anything added to `}<inlineCode parentName=\"p\">{`/blocks.json`}</inlineCode>{` will be automatically registered with both webpack and WordPress as long as there are\ncorresponding scripts and views in the `}<inlineCode parentName=\"p\">{`/resources`}</inlineCode>{` directory.`}</p>\n    <h2 {...{\n      \"id\": \"3-add-scripts\"\n    }}>{`3. Add scripts`}</h2>\n    <p>{`JavaScript files are expected to be found at `}<inlineCode parentName=\"p\">{`/resources/assets/scripts/{namespace}/{block}`}</inlineCode>{`.`}</p>\n    <p>{`Copernicus will watch for the following files in this directory:`}</p>\n    <h3 {...{\n      \"id\": \"editorjs\"\n    }}>{`editor.js`}</h3>\n    <p><inlineCode parentName=\"p\">{`editor.js`}</inlineCode>{` is the main entrypoint and should contain your block defintion. This is the only required asset.`}</p>\n    <h3 {...{\n      \"id\": \"publicjs\"\n    }}>{`public.js`}</h3>\n    <p><inlineCode parentName=\"p\">{`public.js`}</inlineCode>{` will be enqueued only on pages which feature the block. It is strictly optional.`}</p>\n    <h3 {...{\n      \"id\": \"reactjs\"\n    }}>{`react.js`}</h3>\n    <p><inlineCode parentName=\"p\">{`react.js`}</inlineCode>{`works like`}<inlineCode parentName=\"p\">{`public.js`}</inlineCode>{` but supports JSX and automatically enqueues `}<inlineCode parentName=\"p\">{`wp-element`}</inlineCode>{` (WordPress' React wrapper) as a dependency. It is strictly optional.`}</p>\n    <h2 {...{\n      \"id\": \"4-add-styles\"\n    }}>{`4. Add Styles`}</h2>\n    <p>{`Compass files are expected to be found at `}<inlineCode parentName=\"p\">{`/resources/assets/styles/{namespace}/{block}`}</inlineCode>{`.`}</p>\n    <p>{`Copernicus will watch for the following files in this directory:`}</p>\n    <h3 {...{\n      \"id\": \"editorscss\"\n    }}>{`editor.scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`editor.scss`}</inlineCode>{` is for editor styles. It is strictly optional.`}</p>\n    <h3 {...{\n      \"id\": \"publicscss\"\n    }}>{`public.scss`}</h3>\n    <p><inlineCode parentName=\"p\">{`public.scss`}</inlineCode>{`, like `}<inlineCode parentName=\"p\">{`public.js`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`react.js`}</inlineCode>{` will be enqueued only on pages which feature the block. It is strictly optional.`}</p>\n    <h2 {...{\n      \"id\": \"add-a-view\"\n    }}>{`Add a view.`}</h2>\n    <p>{`Your Blade view is anticipated at `}<inlineCode parentName=\"p\">{`/resources/views/blocks/{namespace}/{blockname}.blade.php`}</inlineCode>{`.`}</p>\n    <p>{`Your blade view automatically has access to `}<inlineCode parentName=\"p\">{`$attr`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`$content`}</inlineCode>{`, which correspond with the attributes and inner content markup of the block as defined in your `}<inlineCode parentName=\"p\">{`editor.js`}</inlineCode>{` file.`}</p>\n    <p>{`This view can be extended using components, layouts, view composers, etc.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "]}]}